From b598b543806c935e7a3eef769edc862e24238bc0 Mon Sep 17 00:00:00 2001
From: Stanley Chu <yschu@nuvoton.com>
Date: Mon, 20 Jul 2020 11:04:31 +0800
Subject: [PATCH] create thread to report InvalidArgument error

Signed-off-by: Stanley Chu <yschu@nuvoton.com>
---
 Makefile.am               |  1 +
 settings_main.cpp         | 12 ++++++++++++
 settings_manager.mako.hpp | 19 ++++++++-----------
 3 files changed, 21 insertions(+), 11 deletions(-)

diff --git a/Makefile.am b/Makefile.am
index 68cbd87..2cb508c 100755
--- a/Makefile.am
+++ b/Makefile.am
@@ -33,4 +33,5 @@ phosphor_settings_manager_LDADD = \
 	$(PHOSPHOR_DBUS_INTERFACES_LIBS) \
 	$(SDBUSPLUS_LIBS) \
 	$(PHOSPHOR_LOGGING_LIBS) \
+	-lpthread \
 	-lstdc++fs
diff --git a/settings_main.cpp b/settings_main.cpp
index 0790a7b..29aad62 100644
--- a/settings_main.cpp
+++ b/settings_main.cpp
@@ -1,10 +1,22 @@
 #include "config.h"
 
+#include <thread>
 #include "settings_manager.hpp"
 
 #include <sdbusplus/bus.hpp>
 #include <sdbusplus/server/manager.hpp>
 
+void reportInvalidArgument(std::string name, std::string value)
+{
+    namespace error =
+        sdbusplus::xyz::openbmc_project::Common::Error;
+    namespace metadata =
+        phosphor::logging::xyz::openbmc_project::Common;
+    phosphor::logging::report<error::InvalidArgument>(
+        metadata::InvalidArgument::ARGUMENT_NAME(name.c_str()),
+        metadata::InvalidArgument::ARGUMENT_VALUE(value.c_str()));
+}
+
 int main(int argc, char* argv[])
 {
     auto bus = sdbusplus::bus::new_default();
diff --git a/settings_manager.mako.hpp b/settings_manager.mako.hpp
index d22fd2d..bbcde52 100644
--- a/settings_manager.mako.hpp
+++ b/settings_manager.mako.hpp
@@ -50,6 +50,8 @@ using namespace phosphor::logging;
 #include "${i}"
 % endfor
 
+void reportInvalidArgument(std::string name,  std::string value);
+
 namespace phosphor
 {
 namespace settings
@@ -125,17 +127,12 @@ class Impl : public Parent
             % if propName in validators:
                 if (!${fname}(value))
                 {
-                    namespace error =
-                        sdbusplus::xyz::openbmc_project::Common::Error;
-                    namespace metadata =
-                        phosphor::logging::xyz::openbmc_project::Common;
-                    phosphor::logging::report<error::InvalidArgument>(
-                        metadata::InvalidArgument::ARGUMENT_NAME("${t}"),
-                    % if validators[propName][0] != "regex":
-                        metadata::InvalidArgument::ARGUMENT_VALUE(std::to_string(value).c_str()));
-                    % else:
-                        metadata::InvalidArgument::ARGUMENT_VALUE(value.c_str()));
-                    % endif
+                % if validators[propName][0] != "regex":
+                    std::thread t(reportInvalidArgument, "${t}", std::to_string(value).c_str());
+                % else:
+                    std::thread t(reportInvalidArgument, "${t}", value.c_str());
+                % endif
+                    t.detach();
                     return result;
                 }
              % endif
-- 
2.17.1

