From aa4809d5b1bda72acc42f8ea338c5d0e0d1eb200 Mon Sep 17 00:00:00 2001
From: YSChu <yschu@nuvoton.com>
Date: Mon, 12 Aug 2019 16:59:06 +0800
Subject: [PATCH 1/4] add "Unit" property in Value interface

Signed-off-by: YSChu <yschu@nuvoton.com>
---
 src/ADCSensor.cpp       |  2 ++
 src/CPUSensor.cpp       |  2 ++
 src/HwmonTempSensor.cpp |  2 ++
 src/MCUTempSensor.cpp   |  2 ++
 src/PSUSensor.cpp       | 20 ++++++++++++++++++++
 src/TachSensor.cpp      |  2 ++
 6 files changed, 30 insertions(+)

diff --git a/src/ADCSensor.cpp b/src/ADCSensor.cpp
index bfe17ac..454944a 100644
--- a/src/ADCSensor.cpp
+++ b/src/ADCSensor.cpp
@@ -63,6 +63,8 @@ ADCSensor::ADCSensor(const std::string& path,
     sensorInterface = objectServer.add_interface(
         "/xyz/openbmc_project/sensors/voltage/" + name,
         "xyz.openbmc_project.Sensor.Value");
+    sensorInterface->register_property("Unit",
+        std::string("xyz.openbmc_project.Sensor.Value.Unit.Volts"));
     if (thresholds::hasWarningInterface(thresholds))
     {
         thresholdInterfaceWarning = objectServer.add_interface(
diff --git a/src/CPUSensor.cpp b/src/CPUSensor.cpp
index afc4706..6a0fa7a 100644
--- a/src/CPUSensor.cpp
+++ b/src/CPUSensor.cpp
@@ -69,6 +69,8 @@ CPUSensor::CPUSensor(const std::string& path, const std::string& objectType,
 
             sensorInterface = objectServer.add_interface(
                 interfacePath, "xyz.openbmc_project.Sensor.Value");
+            sensorInterface->register_property("Unit",
+                std::string("xyz.openbmc_project.Sensor.Value.Unit.DegreesC"));
             if (thresholds::hasWarningInterface(thresholds))
             {
                 thresholdInterfaceWarning = objectServer.add_interface(
diff --git a/src/HwmonTempSensor.cpp b/src/HwmonTempSensor.cpp
index 71ff4ed..6a7d0a4 100644
--- a/src/HwmonTempSensor.cpp
+++ b/src/HwmonTempSensor.cpp
@@ -56,6 +56,8 @@ HwmonTempSensor::HwmonTempSensor(
         "/xyz/openbmc_project/sensors/temperature/" + name,
         "xyz.openbmc_project.Sensor.Value");
 
+    sensorInterface->register_property("Unit",
+        std::string("xyz.openbmc_project.Sensor.Value.Unit.DegreesC"));
     if (thresholds::hasWarningInterface(thresholds))
     {
         thresholdInterfaceWarning = objectServer.add_interface(
diff --git a/src/MCUTempSensor.cpp b/src/MCUTempSensor.cpp
index a413214..f412151 100644
--- a/src/MCUTempSensor.cpp
+++ b/src/MCUTempSensor.cpp
@@ -71,6 +71,8 @@ MCUTempSensor::MCUTempSensor(std::shared_ptr<sdbusplus::asio::connection>& conn,
         "/xyz/openbmc_project/sensors/temperature/" + name,
         "xyz.openbmc_project.Sensor.Value");
 
+    sensorInterface->register_property("Unit",
+        std::string("xyz.openbmc_project.Sensor.Value.Unit.DegreesC"));
     if (thresholds::hasWarningInterface(thresholds))
     {
         thresholdInterfaceWarning = objectServer.add_interface(
diff --git a/src/PSUSensor.cpp b/src/PSUSensor.cpp
index 4d6bc1d..0f49157 100644
--- a/src/PSUSensor.cpp
+++ b/src/PSUSensor.cpp
@@ -71,6 +71,26 @@ PSUSensor::PSUSensor(const std::string& path, const std::string& objectType,
     sensorInterface = objectServer.add_interface(
         dbusPath, "xyz.openbmc_project.Sensor.Value");
 
+    if (sensorTypeName == "temperature/")
+    {
+        sensorInterface->register_property("Unit",
+            std::string("xyz.openbmc_project.Sensor.Value.Unit.DegreesC"));
+    }
+    else if (sensorTypeName == "voltage/")
+    {
+        sensorInterface->register_property("Unit",
+            std::string("xyz.openbmc_project.Sensor.Value.Unit.Volts"));
+    }
+    else if (sensorTypeName == "current/")
+    {
+        sensorInterface->register_property("Unit",
+            std::string("xyz.openbmc_project.Sensor.Value.Unit.Amperes"));
+    }
+    else if (sensorTypeName == "power/")
+    {
+        sensorInterface->register_property("Unit",
+            std::string("xyz.openbmc_project.Sensor.Value.Unit.Watts"));
+    }
     if (thresholds::hasWarningInterface(thresholds))
     {
         thresholdInterfaceWarning = objectServer.add_interface(
diff --git a/src/TachSensor.cpp b/src/TachSensor.cpp
index c45fcb0..a4bfddd 100644
--- a/src/TachSensor.cpp
+++ b/src/TachSensor.cpp
@@ -60,6 +60,8 @@ TachSensor::TachSensor(const std::string& path, const std::string& objectType,
     sensorInterface = objectServer.add_interface(
         "/xyz/openbmc_project/sensors/fan_tach/" + name,
         "xyz.openbmc_project.Sensor.Value");
+    sensorInterface->register_property("Unit",
+        std::string("xyz.openbmc_project.Sensor.Value.Unit.RPMS"));
 
     if (thresholds::hasWarningInterface(thresholds))
     {
-- 
2.17.1

